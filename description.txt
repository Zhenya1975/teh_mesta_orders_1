таблица с полным списком заказов.  - data/uploaded_data/iw_39_verninskoye_dump_tr_excav_02_02_2022.csv

для начала. Будем очень выборочно выбирать колонки из заказов. Там их овердохера. Лучше точечно выбирать
то, что действительно нужно.


в файле prep_dfa.py загружаем файл iw_39:
- (DONE) удаляем из него ЕТО, 
- (DONE) базисную дату начала делаем датой, сортируем по ней,
- (DONE) парсим статусы и укладываем их в листы.
- статусы раскладываем в колонки для последющего включения фильтров по статусам
- (DONE) добавляем колонку "базисный срок начала номер месяца из iw39" - номер месяца 
- (DONE) добавляем колонку "базисный срок начала номер года из iw39" - номер года 
- (DONE) добавляем колонку со значением iw_39. по этому признаку будем отделять записи этого ряда
- склеиваем с таблицей order_category для описания фильтров по виду заказа
- склеиваем с таблицей full_eo_list 
- склеиваем с таблицей level_1

- вытаскиваем колонки ['Заказ', 'СистСтатус', 'ПользСтатус', 'Единица оборудования', 'Техническое место',	'Название технического места', 'Краткий текст',
'basis_start_year',	'basis_start_month',	'basis_start_date',	'basis_start_month_year'] 
из level_1 - ['level_1_description']

Полученный результат - будет полным списком заказов
сохраняем результат в intermediate_dfs -> iw_39

Проверяем все ли заказы из АРМ есть в iw_39. в отдельном файле check_arm_iw_39.py джойним и выводим на принт список заказов, которые есть в арме, но нет в iw-39. Добиваемся, чтобы в iw_39 оказались все записи из арм.

Готовим ряд "заказы из iw_39". Это столбик на графике и записи в таблице покажет общее количество обнаруженнных заказов у которых базисный срок начала - в соответствующем месяце. Этот столбик и строки в таблице будем в дальнейшем изменять фильтрами по статусу заказа, статусу сообщений и другие фильтра можно будет прикрутить


таблица со списком, выгруженным из АРМ-планировщика - 